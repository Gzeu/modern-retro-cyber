name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  release:
    name: Release Packages
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🔧 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: 🏢 Build packages
        run: pnpm build
        
      - name: 🧪 Run tests
        run: pnpm test
        
      - name: 🔄 Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish
          title: 'chore: release packages'
          commit: 'chore: release packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: 🎉 Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changesets.outputs.version }}
          release_name: Release v${{ steps.changesets.outputs.version }}
          body: |
            ## Changes
            
            ${{ steps.changesets.outputs.changelog }}
            
            ## Installation
            
            ```bash
            npm install @modern-retro-cyber/ui@${{ steps.changesets.outputs.version }}
            npm install @modern-retro-cyber/config@${{ steps.changesets.outputs.version }}
            ```
          draft: false
          prerelease: ${{ contains(steps.changesets.outputs.version, '-') }}
